


# svm used only for two classes
import csv
import numpy as np
from sklearn.metrics import accuracy_score
from sklearn.model_selection import train_test_split
from sklearn import svm
from sklearn import metrics
X=[]
Y=[]
# Replace 'path_to_your_csv_file' with the actual path to your CSV file in Google Colab
file_path = '/content/drive/MyDrive/diabetes_data.csv'

with open(file_path) as f:
    data = csv.reader(f)
    header = next(data) # first row from the file and save it as 'header
    for r in data:
        X.append(np.asarray(r[0:7],dtype=float))
        Y.append(np.asarray(r[7],dtype=float))
X=np.asarray(X)
Y=np.asarray(Y)
X_train,X_test,Y_train,Y_test=train_test_split(X,Y,test_size=0.20)
clf=svm.SVC(C=1,gamma=2.0,class_weight='balanced',kernel='linear')
# C=1: This is like telling the tool how strict to be when separating. At 1, it's being reasonable.
# gamma=2.0: Normally, this tells the tool how closely to examine each sample.
# class_weight='balanced': This means if you have many more apples than oranges, the tool will still treat them equal.
# kernel='linear': This is telling the tool to use a straight line to separate samples.
clf.fit(X_train,Y_train)
pre=clf.predict(X_test)

a=accuracy_score(Y_test,pre)
print("Accuracy=",a)
